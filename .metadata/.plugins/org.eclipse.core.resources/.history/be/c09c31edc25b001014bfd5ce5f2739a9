package com.multicampus.biz.board;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import com.multicampus.biz.common.JDBCUtil;

// DAO(Data Access Object) : 데이터베이스 관련 작업을 실질적으로 처리하는 클래스 
public class BoardDAO {
	// JDBC 관련 변수
	Connection conn = null;
	PreparedStatement stmt = null;
	ResultSet rs = null;
	
	// BOARD 테이블 관련 SQL
	private String board_insert = "insert into board(seq, title, writer, content) values(?, ?, ?, ?)";
	private String board_update = "update board set title = ?, content = ? where seq = ?";
	private String board_delete = "delete board where seq = ?";
	private String board_list = "select * from board order by seq desc";
	private String board_get = "select * from board where seq = ?";

	// USERS 테이블 관련 CRUD 기능의 메소드 구현
	// 회원 등록
	public void insertBoard(BoardVO vo) {
		try {
			conn = JDBCUtil.getConnection();
			stmt = conn.prepareStatement(board_insert);
			stmt.setInt(1, vo.getSeq());
			stmt.setString(2, vo.getTitle());
			stmt.setString(3, vo.getWriter());
			stmt.setString(4, vo.getContent());
			stmt.executeUpdate();
		} catch (SQLException e) {
			e.printStackTrace();
		} finally {
			JDBCUtil.close(rs, stmt, conn);
		}
	}
	// 회원 수정
	public void updateBoard(BoardVO vo) {
		try {
			conn = JDBCUtil.getConnection();
			stmt = conn.prepareStatement(user_update);
			stmt.setString(1, vo.getName());
			stmt.setString(2, vo.getRole());
			stmt.setString(3, vo.getId());
			stmt.executeUpdate();
		} catch (SQLException e) {
			e.printStackTrace();
		} finally {
			JDBCUtil.close(rs, stmt, conn);
		}
	}
	// 회원 삭제
	public void deleteBoard(BoardVO vo) {
		try {
			conn = JDBCUtil.getConnection();
			stmt = conn.prepareStatement(user_delete);
			stmt.setString(1, vo.getId());
			stmt.executeUpdate();
		} catch (SQLException e) {
			e.printStackTrace();
		} finally {
			JDBCUtil.close(rs, stmt, conn);
		}
	}
	// 회원 목록 검색
	public List<BoardVO> getBoardList() {
		List<BoardVO> userList = new ArrayList<BoardVO>();
		try {
			conn = JDBCUtil.getConnection();
			stmt = conn.prepareStatement(user_list);
			rs = stmt.executeQuery();
			
			while(rs.next()) {
				BoardVO user = new BoardVO();
				user.setId(rs.getString("ID"));
				user.setName(rs.getString("NAME"));
				user.setPassword(rs.getString("PASSWORD"));
				user.setRole(rs.getString("ROLE"));
				userList.add(user);
			}
		} catch (SQLException e) {
			e.printStackTrace();
		} finally {
			JDBCUtil.close(rs, stmt, conn);
		}
		return userList;
	}
}
